# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'VS2017-Win2016'

steps:
- powershell: gci -Path 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE' -Filter 'PowershellTools.15.0.dll' -Recurse
#- powershell: (new-object net.webclient).DownloadFile('https://aka.ms/vs/15/release/vs_enterprise.exe','vs_enterprise.exe')
#- powershell: Start-Process -Wait -NoNewWindow -FilePath vs_enterprise.exe -ArgumentList ('--norestart','--add Microsoft.VisualStudio.Component.PowerShell.Tools','--passive ','--wait');
#- script: REM vs_enterprise.exe --installPath C:\minVS --add Microsoft.VisualStudio.Component.PowerShellTools.VS2017 --quiet --wait
#- powershell: if (!(Get-Command Get-VSSetupInstance -EA SilentlyContinue)) { Install-Module VSSetup -Scope CurrentUser -AllowClobber -Force } (Get-VSSetupInstance -All |? { $_.Packages -like '*PowerShell*' } | Select-VSSetupInstance -Latest).InstallationPath
#- powershell: if (!(Get-Command Get-VSSetupInstance -EA SilentlyContinue)) { Install-Module VSSetup -Scope CurrentUser -AllowClobber -Force } (Get-VSSetupInstance -All | Select-VSSetupInstance -Latest).Packages.UniqueId
#- powershell: Get-VSSetupInstance -All -Prerelease 
#| Select-VSSetupInstance -Require 'Microsoft.VisualStudio.Component.PowerShell.Tools' -Product '*' -Latest
